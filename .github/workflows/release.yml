name: Release

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      version:
        required: true
        default: latest
        description: "BYOND Version"

jobs:
  Build:
    runs-on: ubuntu-20.04
    if: ${{ false }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Check for BYOND version
        run: |
          if [ "${{ github.event.inputs.version }}" == "latest" ] || [ "${{ github.event.inputs.version }}" == "" ]; then
            curl https://secure.byond.com/download/version.txt -o VERSION
          else
            echo "${{ github.event.inputs.version }}" > VERSION
          fi

      - name: Build docker images
        run: |
          if [ "${{ github.event.inputs.version }}" == "latest" ] || [ "${{ github.event.inputs.version }}" == "" ]; then
            docker build --build-arg BYOND_MAJOR=$(echo "$(cut -d'.' -f1 <<< $(cat ${{ github.workspace }}/VERSION))") --build-arg BYOND_MINOR=$(echo "$(cut -d'.' -f2 <<< $(cat ${{ github.workspace }}/VERSION))") -t douglasparker/byond:$(cat ${{ github.workspace }}/VERSION) -t douglasparker/byond:latest -t ghcr.io/douglasparker/byond:$(cat ${{ github.workspace }}/VERSION) -t ghcr.io/douglasparker/byond:latest .
          else
            docker build --build-arg BYOND_MAJOR=$(echo "$(cut -d'.' -f1 <<< $(cat ${{ github.workspace }}/VERSION))") --build-arg BYOND_MINOR=$(echo "$(cut -d'.' -f2 <<< $(cat ${{ github.workspace }}/VERSION))") -t douglasparker/byond:$(cat ${{ github.workspace }}/VERSION) -t ghcr.io/douglasparker/byond:$(cat ${{ github.workspace }}/VERSION) .
          fi
      
      - name: Save docker images
        run: |
          if [ "${{ github.event.inputs.version }}" == "latest" ] || [ "${{ github.event.inputs.version }}" == "" ]; then
            docker save --output ${{ github.workspace }}/images.tar douglasparker/byond:$(cat ${{ github.workspace }}/VERSION) douglasparker/byond:latest ghcr.io/douglasparker/byond:$(cat ${{ github.workspace }}/VERSION) ghcr.io/douglasparker/byond:latest
          else
            docker save --output ${{ github.workspace }}/images.tar douglasparker/byond:$(cat ${{ github.workspace }}/VERSION) ghcr.io/douglasparker/byond:$(cat ${{ github.workspace }}/VERSION)
          fi

      - name: Cache build artifacts
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ${{ github.workspace }}/VERSION
            ${{ github.workspace }}/images.tar
          key: ${{ github.run_id }}
  
  Release:
    runs-on: ubuntu-20.04
    needs: [Build]
    if: ${{ false }}
    steps:
      - name: Restore cached build artifacts
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ${{ github.workspace }}/VERSION
            ${{ github.workspace }}/images.tar
          key: ${{ github.run_id }}
      
      - name: Load docker images
        run: |
          docker load --input ${{ github.workspace }}/images.tar
      
      - name: Publish releases to Docker Hub
        run: |
          docker login -u "${{ secrets.DOCKER_REGISTRY_USERNAME }}" -p "${{ secrets.DOCKER_REGISTRY_PASSWORD }}"
          if [ "${{ github.event.inputs.version }}" == "latest" ] || [ "${{ github.event.inputs.version }}" == "" ]; then
            docker push douglasparker/byond:$(cat ${{ github.workspace }}/VERSION)
            docker push douglasparker/byond:latest
          else
            docker push douglasparker/byond:$(cat ${{ github.workspace }}/VERSION)
          fi
      
      - name: Publish releases to GitHub Container Registry
        run: |
          docker login ghcr.io -u "${{ secrets.GH_CONTAINER_REGISTRY_USERNAME }}" -p "${{ secrets.GH_CONTAINER_REGISTRY_PASSWORD }}"
          if [ "${{ github.event.inputs.version }}" == "latest" ] || [ "${{ github.event.inputs.version }}" == "" ]; then
            docker push ghcr.io/douglasparker/byond:$(cat ${{ github.workspace }}/VERSION)
            docker push ghcr.io/douglasparker/byond:latest
          else
            docker push ghcr.io/douglasparker/byond:$(cat ${{ github.workspace }}/VERSION)
          fi

  Keepalive-Workflow:
    runs-on: ubuntu-20.04
    if: ${{ false }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Run Keepalive Workflow
        uses: gautamkrishnar/keepalive-workflow@master
        with:
          commit_message: "chore(ci): automated commit to prevent GitHub from disabling scheduled workflows"
